name: Django Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install Dependencies
      run: poetry install --no-interaction --no-ansi --no-root
    
    - name: Run Tests
      env:
        DATABASE_URL: postgres://postgres:1234@localhost:5432/postgres
      run: |
        poetry run python manage.py collectstatic --noinput
        poetry run python manage.py test
    
    - name: Lint with flake8
      run: |
        poetry add flake8
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

# How to Use This Workflow:
# 1. This workflow will automatically run tests when you push to main or create a pull request
# 2. Tests will be run in a PostgreSQL environment that matches your project configuration
# 3. Basic linting is also performed to catch common Python errors